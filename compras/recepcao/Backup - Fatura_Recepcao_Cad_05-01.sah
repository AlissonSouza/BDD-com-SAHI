//Acesso o link da função Orçamento

//	--------------------  FATURA SOMENTE COM ITENS, SEM ELMENTO DE FATURAÇÃO OU DESCONTO EM LINHA

/*_click(_link("Navigation"));

_click(_div("Vendas"));

_click(_div("Orçamentos[1]"))

// Escolhe a transação
_click(_div("ALL Registo completo orçamentos"));

_wait(2000);
*/
//	Adiciona as variaveis - eu havia efetuado o chamado aqui porque existia um for dentro deste script que exigia estar com a função aberta
_include("C:/Users/alisson.souza/sahi/userdata/scripts/Compras/Recepcao/Fatura_Recepcao_Variaveis.sah");

_click(_div("Nova"));

_setValue($txtEstabRecepcao, "BR050");
_keyPress($txtEstabRecepcao, 9);

_click($txtFornecedor);
_setValue($txtFornecedor, "BR107");
_keyPress($txtFornecedor, 9);

_click($txtDivisa);
_setValue($txtDivisa, "BRL");
_keyPress($txtDivisa, 9);

//--------------- Separador Dados Gerais -------------------------
_click(_div("Dados gerais"));

_click($txtEndFor);
_setValue($txtEndFor, "001");
_keyPress($txtEndFor, 9);

_click($txtOpFiscal);
_setValue($txtOpFiscal, "502");
_keyPress($txtOpFiscal, 9);


//-------------------------  LINHAS ----------------------------
_click(_div("Linhas"));

var $prod = 52;

for (var $i=0; $i<18; $i++){ // A QUANTIDADE DE ITENS INSERIDOS SERÁ CONTROLADA PELA VARIAVEL i							
	
	//PRODUTO
	clickLinha("Artigo", $i);
	//setLinha("Artigo", $i, "BMS001");
	setLinha("Artigo", $i, "BMS0"+$prod);
	tabLinha("Artigo", $i);

	// QUANTIDADE ORÇ.
	clickLinha ("Quantid.", $i);
	setLinha("Quantid.", $i, "10");
	tabLinha ("Quantid.",$i);

	// PREÇO BRUTO
	clickLinha("Prç. bruto",$i);
	setLinha("Prç. bruto",$i, "100");
	enterLinha("Prç. bruto",$i);
	
	
	switch ($i+1){
		case 1:
		$prod = 53;
		break;
		
		case 2:
		$prod = 55;
		break;
		
		case 3:
		$prod = 56;
		break;
		
		case 4:
		$prod = 58;
		break;
		
		case 5:
		$prod = 59;
		break;
		
		case 6:
		$prod = 61;
		break;
		
		case 7:
		$prod = 63;
		break;
		case 8:
		$prod = 64;
		break;
		
		case 9:
		$prod = 66;
		break;
		
		case 10:
		$prod = 67;
		break;		
		
		case 11:
		$prod = 68;
		break;
		
		case 12:
		$prod = 69;
		break;
		
		case 13:
		$prod = 71;
		break;
		
		case 14:
		$prod = 72;
		break;
		
		case 15:
		$prod = 74;
		break;
		
		case 16:
		$prod = 75;
		break;
		
		case 17:
		$prod = 77;
		break;
	
		default :
		$prod = 52;
		break;	
	}
	
}	
//-------------------------  LINHAS IMPOSTOS ----------------------------	
_click(_div("Linhas impostos"));

var $prod = 52;

for (var $i=0; $i<18; $i++){
	
	//criando função para achar a CFOP na classe variaveis
	
	// CFOP
	var $cfop = acharCFOP("BMS0"+$prod);
	
	clickLinhaImpostos("CFOP",$i);
	setLinhaImpostos("CFOP",$i, $cfop);
	tabLinhaImpostos("CFOP",$i);

	//Mod. Base Cálculo
		
	// ORIGEM
	clickLinhaImpostos("Origem",$i);
	setLinhaImpostos("Origem",$i, "0");
	tabLinhaImpostos("Origem",$i);
	
	// CST ICMS
	var $csticms = acharCSTICMS("BMS0"+$prod);
	clickLinhaImpostos("CST ICMS",$i);
	setLinhaImpostos("CST ICMS",$i, $csticms);
	tabLinhaImpostos("CST ICMS",$i);
	
	switch ($csticms){
	case "10":
		try{
			_click(_cell("10[3]"));
			} catch ($e){
				_click(_div("10"));
			}
		break ;
	case "20":
		_click(_cell("20[1]"));
		break ;
	case "30":
		_click(_cell("30[1]"));
		break ;
	case "40":
		_click(_cell("40[1]"));
		break ;
	case "50":
		_click(_cell("50[1]"));
		break ;
	case "90":
		_click(_cell("90[1]"));
		break ;
	default :
		clickLinhaImpostos("Red. Base ICMS",$i);
		break ;
	}

// ---------------------------------------------   ICMS -----------------------------------------------------------------
	
	function acharRedBcICMS ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "33,33";
			case "BMS064":
				return "10";	
			default :
				return "";
		}
	}
	
	//Red. Base ICMS
	var $redBcICMS = acharRedBcICMS("BMS0"+$prod);
	clickLinhaImpostos("Red. Base ICMS",$i);
	setLinhaImpostos("Red. Base ICMS",$i, $redBcICMS);
	tabLinhaImpostos("Red. Base ICMS",$i);
	
	function acharBcICMS ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "666,70";
			case "BMS064":
				return "900";	
			case "BMS052":
			case "BMS063":
				return "1000";				
			default :
				return "";
		}
	}
	//Base ICMS
	var $bcICMS = acharBcICMS("BMS0"+$prod);
	clickLinhaImpostos("Base ICMS",$i);
	setLinhaImpostos("Base ICMS",$i, $bcICMS);
	tabLinhaImpostos("Base ICMS",$i);
	
	
	function acharAliqICMS ($artigo){
		switch ($artigo){
			case "BMS055":
			case "BMS056":
			case "BMS058":
			case "BMS059":
			case "BMS061":
			case "BMS066":
			case "BMS069":			
				return "";
			default :
				return "12";
		}
	}
	//Alíq. ICMS (%)
	var $aliqICMS = acharAliqICMS("BMS0"+$prod);
	clickLinhaImpostos("Alíq. ICMS (%)",$i);
	setLinhaImpostos("Alíq. ICMS (%)",$i, $aliqICMS);
	tabLinhaImpostos("Alíq. ICMS (%)",$i);
	
	//Mot. ICMS desonerado #TODO
	
	function acharDifIcms ($artigo){
		switch ($artigo){
			case "BMS063":
				return "23,33";
			case "BMS064":
				return "21";
			default :
				return "";
		}
	}
		//Valor ICMS diferido
		var $difICMS = acharDifIcms("BMS0"+$prod);
		clickLinhaImpostos("Valor ICMS diferido",$i);
		setLinhaImpostos("Valor ICMS diferido",$i, $difICMS);
		tabLinhaImpostos("Valor ICMS diferido",$i);
		
	function acharDesonICMS ($artigo){
		switch ($artigo){
			case "BMS056":
			case "BMS058":
				return "70";
			case "BMS068":
			case "BMS072":
			case "BMS075":
			case "BMS077":
				return "23,33";
			default :
				return "";
		}
	}	//Valor ICMS desonerado
		var $desonICMS = acharDesonICMS("BMS0"+$prod);
		clickLinhaImpostos("Valor ICMS desonerado",$i);
		setLinhaImpostos("Valor ICMS desonerado",$i, $desonICMS);
		tabLinhaImpostos("Valor ICMS desonerado",$i);
	
	
	function acharRedValICMS ($artigo){
		switch ($artigo){
			case "BMS063":
			case "BMS064":
				return "33,33";		
			default :
				return "";
		}
	}	//Red. Valor ICMS (%)
		var $redValICMS = acharRedValICMS("BMS0"+$prod);
		clickLinhaImpostos("Red. Valor ICMS (%)",$i);
		setLinhaImpostos("Red. Valor ICMS (%)",$i, $redValICMS);
		tabLinhaImpostos("Red. Valor ICMS (%)",$i);
	
	
	//Valor do ICMS -- Verificar e se necessário remover
	clickLinhaImpostos("Valor ICMS",$i);
	setLinhaImpostos("Valor ICMS",$i, 50);
	tabLinhaImpostos("Valor ICMS",$i);
	
	
	function acharValIcmsDevido ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS063":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "46,67";		
			case "BMS064":
				return "42";		
			case "BMS052":
				return "70";		
			default :
				return "";
		}
	}	//Valor ICMS devido
		var $ValIcmsDevido = acharValIcmsDevido("BMS0"+$prod);
		clickLinhaImpostos("Valor ICMS devido",$i);
		setLinhaImpostos("Valor ICMS devido",$i, $ValIcmsDevido);
		tabLinhaImpostos("Valor ICMS devido",$i);
	
//----------------------------------------- ICMS ST ----------------------------------------	
	
//Mod. Base calc. ST
//Red. MVA ICMS ST (%) -- acho que não precisa
//MVA ajustada ICMS ST (%) -- acho que não precisa

	function acharMvaIcmsSt ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS056":
			case "BMS068":
			case "BMS077":
			case "BMS067":
			case "BMS074":
			case "BMS075":
			case "BMS055":
				return "40";
			default :
				return "";
		}
	}	//MVA ICMS ST (%)
		var $MvaIcmsSt = acharMvaIcmsSt("BMS0"+$prod);
		clickLinhaImpostos("MVA ICMS ST (%)",$i);
		setLinhaImpostos("MVA ICMS ST (%)",$i, $MvaIcmsSt);
		tabLinhaImpostos("MVA ICMS ST (%)",$i);

	function acharRedBaseIcmsSt ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS056":
			case "BMS068":
			case "BMS077":
				return "33,33";				
			default :
				return "";
		}
	}	//Red. Base Cálculo ICMS ST (%)
		var $RedBaseIcmsSt = acharRedBaseIcmsSt("BMS0"+$prod);
		clickLinhaImpostos("Red. Base Cálculo ICMS ST (%)",$i);
		setLinhaImpostos("Red. Base Cálculo ICMS ST (%)",$i, $RedBaseIcmsSt);
		tabLinhaImpostos("Red. Base Cálculo ICMS ST (%)",$i);
		
		
	function acharBaseIcmsSt ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS056":
				return "933,38";
			case "BMS068":
			case "BMS077":
				return "980,05";
			case "BMS067":
			case "BMS074":
			case "BMS075":
				return "1470,00";
			case "BMS055":
				return "1400,00";
			default :
				return "";
		}
	}	//Base ICMS ST
		var $BaseIcmsSt = acharBaseIcmsSt("BMS0"+$prod);
		clickLinhaImpostos("Base ICMS ST",$i);
		setLinhaImpostos("Base ICMS ST",$i, $BaseIcmsSt);
		tabLinhaImpostos("Base ICMS ST",$i);
		
	
	function acharAliqIcmsSt ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS056":
			case "BMS068":
			case "BMS077":
			case "BMS067":
			case "BMS074":
			case "BMS075":
			case "BMS055":
				return "17";
			default :
				return "";
		}
	}	//Alíq. ICMS ST (%)
		var $AliqIcmsSt = acharAliqIcmsSt("BMS0"+$prod);
		clickLinhaImpostos("Alíq. ICMS ST (%)",$i);
		setLinhaImpostos("Alíq. ICMS ST (%)",$i, $AliqIcmsSt);
		tabLinhaImpostos("Alíq. ICMS ST (%)",$i);
				
		//Red. Valor ICMS ST (%)
		//Valor ICMS ST
		
		
	function acharValFinalIcmsSt ($artigo){
		switch ($artigo){
			case "BMS052":
				return "88,67";
			case "BMS056":
				return "158,67";
			case "BMS068":
			case "BMS077":
				return "119,94";
			case "BMS067":
			case "BMS074":
			case "BMS075":
				return "203,23";
			case "BMS055":
				return "238,00";
			default :
				return "";
		}
	}	//Valor final ICMS ST	
		var $ValFinalIcmsSt = acharValFinalIcmsSt("BMS0"+$prod);
		clickLinhaImpostos("Valor final ICMS ST",$i);
		setLinhaImpostos("Valor final ICMS ST",$i, $ValFinalIcmsSt);
		tabLinhaImpostos("Valor final ICMS ST",$i);
		
//----------------------------------------- IPI ----------------------------------------
	
	function acharCstIPI ($artigo){
		switch ($artigo){
			case "BMS061":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "50";		
			case "BMS052":
				return "51";		
			default :
				return "52";
		}
	}	//CST IPI
		var $CstIPI = acharCstIPI("BMS0"+$prod);
		clickLinhaImpostos("CST IPI",$i);
		setLinhaImpostos("CST IPI",$i, $CstIPI);
		tabLinhaImpostos("CST IPI",$i);
	
	//IPI Base ICMS
	//Red. Base IPI (%)
	
	function acharBaseIPI ($artigo){
		switch ($artigo){
			case "BMS061":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
			case "BMS052":
				return "1000";						
			default :
				return "";
		}
	}	//Base IPI
		var $BaseIPI = acharBaseIPI("BMS0"+$prod);
		clickLinhaImpostos("Base IPI",$i);
		setLinhaImpostos("Base IPI",$i, $BaseIPI);
		tabLinhaImpostos("Base IPI",$i);
	
	
	
	function acharAliqIPI ($artigo){
		switch ($artigo){
			case "BMS061":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "5";		
			case "BMS052":
				return "0";		
			default :
				return "";
		}
	}	//Alíq. IPI
		var $AliqIPI = acharAliqIPI("BMS0"+$prod);
		clickLinhaImpostos("Alíq. IPI",$i);
		setLinhaImpostos("Alíq. IPI",$i, $AliqIPI);
		tabLinhaImpostos("Alíq. IPI",$i);
	
	//Red. Valor IPI
	
	
	function acharValIPI ($artigo){
		switch ($artigo){
			case "BMS061":
			case "BMS067":
			case "BMS068":
			case "BMS071":
			case "BMS072":
			case "BMS074":
			case "BMS075":
			case "BMS077":
				return "50";		
			case "BMS052":
				return "0";		
			default :
				return "";
		}
	}	//Valor IPI
		var $ValIPI = acharValIPI("BMS0"+$prod);
		clickLinhaImpostos("Valor IPI",$i);
		setLinhaImpostos("Valor IPI",$i, $ValIPI);
		tabLinhaImpostos("Valor IPI",$i);
	

	
//---------------------------------------  PIS ----------------------------------------------
	
	function acharCstPis ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "50";		
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "98";		
			default :
				return "71";
		}
	}	//CST PIS
		var $CstPis = acharCstPis("BMS0"+$prod);
		clickLinhaImpostos("CST PIS",$i);
		setLinhaImpostos("CST PIS",$i, $CstPis);
		tabLinhaImpostos("CST PIS",$i);
	
	
	function acharBasePisR ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "1000";		
			default :
				return "";
		}
	}	//Base PIS (R$)
		var $BasePisR = acharBasePisR("BMS0"+$prod);
		clickLinhaImpostos("Base PIS (R$)",$i);
		setLinhaImpostos("Base PIS (R$)",$i, $BasePisR);
		tabLinhaImpostos("Base PIS (R$)",$i);
	
	
	function acharAliqPisP ($artigo){
		switch ($artigo){
			case "BMS052":
				return "1";
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "0,65";		
			default :
				return "";
		}
	}	//Alíq. PIS (%)
		var $AliqPisP = acharAliqPisP("BMS0"+$prod);
		clickLinhaImpostos("Alíq. PIS (%)",$i);
		setLinhaImpostos("Alíq. PIS (%)",$i, $AliqPisP);
		tabLinhaImpostos("Alíq. PIS (%)",$i);
	
	
	function acharBasePisQ ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "40";		
			default :
				return "";
		}
	}	//Base PIS (Qtd)
		var $BasePisQ = acharBasePisQ("BMS0"+$prod);
		clickLinhaImpostos("Base PIS (Qtd)",$i);
		setLinhaImpostos("Base PIS (Qtd)",$i, $BasePisQ);
		tabLinhaImpostos("Base PIS (Qtd)",$i);
	
	function acharAliqPisR ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "2";		
			default :
				return "";
		}
	}	//Alíq. PIS (R$)
		var $AliqPisR = acharAliqPisR("BMS0"+$prod);
		clickLinhaImpostos("Alíq. PIS (%)",$i);
		setLinhaImpostos("Alíq. PIS (%)",$i, $AliqPisR);
		tabLinhaImpostos("Alíq. PIS (%)",$i);
	
	
	function acharValPIS ($artigo){
		switch ($artigo){
			case "BMS052":
				return "10";
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "6,50";		
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "80";		
			default :
				return "";
		}
	}	//Valor PIS
		var $ValPIS = acharValPIS("BMS0"+$prod);
		clickLinhaImpostos("Valor PIS",$i);
		setLinhaImpostos("Valor PIS",$i, $ValPIS);
		tabLinhaImpostos("Valor PIS",$i);	

//---------------------------------------  COFINS ----------------------------------------------
	
	function acharCstCofins ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "50";		
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "98";		
			default :
				return "71";
		}
	}	//CST COFINS
		var $CstCofins = acharCstCofins("BMS0"+$prod);
		clickLinhaImpostos("CST COFINS",$i);
		setLinhaImpostos("CST COFINS",$i, $CstCofins);
		tabLinhaImpostos("CST COFINS",$i);
	
	function acharBaseCofinsR ($artigo){
		switch ($artigo){
			case "BMS052":
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "1000";		
			default :
				return "";
		}
	}	//Base COFINS (R$)
		var $BaseCofinsR = acharBaseCofinsR("BMS0"+$prod);
		clickLinhaImpostos("Base COFINS (R$)",$i);
		setLinhaImpostos("Base COFINS (R$)",$i, $BaseCofinsR);
		tabLinhaImpostos("Base COFINS (R$)",$i);
		
	
	function acharAliqCofinsP ($artigo){
		switch ($artigo){
			case "BMS052":
				return "6";
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "3";		
			default :
				return "";
		}
	}	//Alíq. COFINS (%)
		var $AliqCofinsP = acharAliqCofinsP("BMS0"+$prod);
		clickLinhaImpostos("Alíq. COFINS (%)",$i);
		setLinhaImpostos("Alíq. COFINS (%)",$i, $AliqCofinsP);
		tabLinhaImpostos("Alíq. COFINS (%)",$i);
	
	
	function acharBaseCofinsQ ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "160";		
			default :
				return "";
		}
	}	//Base COFINS (QTY)
		var $BaseCofinsQ = acharBaseCofinsQ("BMS0"+$prod);
		clickLinhaImpostos("Base COFINS (QTY)",$i);
		setLinhaImpostos("Base COFINS (QTY)",$i, $BaseCofinsQ);
		enterLinhaImpostos("VBase COFINS (QTY)",$i);
	
	function acharAliqCofinsR ($artigo){
		switch ($artigo){
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "4";		
			default :
				return "";
		}
	}
		//Alíq. COFINS (R$)
		var $AliqCofinsR = acharAliqCofinsR("BMS0"+$prod);
		clickLinhaImpostos("Alíq. COFINS (R$)",$i);
		setLinhaImpostos("Alíq. COFINS (R$)",$i, $AliqCofinsR);
		tabLinhaImpostos("Alíq. COFINS (R$)",$i);
	
	
	function acharValCofins ($artigo){
		switch ($artigo){
			case "BMS052":
				return "60";
			case "BMS068":
			case "BMS074":
			case "BMS075":
				return "30";		
			case "BMS053":
			case "BMS071":
			case "BMS072":
			case "BMS077":
				return "640";		
			default :
				return "";
		}
	}	//Valor COFINS
		var $ValCofins = acharValCofins("BMS0"+$prod);
		clickLinhaImpostos("Valor COFINS",$i);
		setLinhaImpostos("Valor COFINS",$i, $ValCofins);
		enterLinhaImpostos("Valor COFINS",$i);
		
		
		
	// NIVEL TAXA 1 -- ENTER
	//clickLinha("Nível taxa 1",$i);
	//setLinhaImpostos("Nível taxa 1", $i , "BRL");
	//enterLinha("Nível taxa 1",$i);

	/*
	try{
		_click(_div("No"));
	}catch ($e){
		clickLinha("Artigo", $i);
	}
	*/
	switch ($i+1){
		case 1:
		$prod = 53;
		break;
		
		case 2:
		$prod = 55;
		break;
		
		case 3:
		$prod = 56;
		break;
		
		case 4:
		$prod = 58;
		break;
		
		case 5:
		$prod = 59;
		break;
		
		case 6:
		$prod = 61;
		break;
		
		case 7:
		$prod = 63;
		break;
		case 8:
		$prod = 64;
		break;
		
		case 9:
		$prod = 66;
		break;
		
		case 10:
		$prod = 67;
		break;		
		
		case 11:
		$prod = 68;
		break;
		
		case 12:
		$prod = 69;
		break;
		
		case 13:
		$prod = 71; 
		break;
		
		case 14:
		$prod = 72;
		break;
		
		case 15:
		$prod = 74;
		break;
		
		case 16:
		$prod = 75;
		break;
		
		case 17:
		$prod = 77;
		break;
	
		default :
		$prod = 52;
		break;	
	}
}

_click(_div("Criar"));

_wait(10000, !_isVisible(_div("s-uiLocker-overlay")));

// -------------- Validações com Assert
_click(_div("Resumo NF-e"));

_assertExists($txtTotMerc);
_assert(_isVisible($txtTotMerc));
_assertEqual("3 000,00", _getValue($txtTotMerc));

_assertExists($txtTotServ);
_assert(_isVisible($txtTotServ));
_assertEqual("", _getValue($txtTotServ));

_assertExists($txtTotDesc);
_assert(_isVisible($txtTotDesc));
_assertEqual("", _getValue($txtTotDesc));

_assertExists($txtTotSuf);
_assert(_isVisible($txtTotSuf));
_assertEqual("", _getValue($txtTotSuf));

_assertExists($txtTotDeson);
_assert(_isVisible($txtTotDeson));
_assertEqual("", _getValue($txtTotDeson));

_assertExists($txtTotIPIeST);
_assert(_isVisible($txtTotIPIeST));
_assertEqual("279,90", _getValue($txtTotIPIeST));

_assertExists($txtTotFrete);
_assert(_isVisible($txtTotFrete));
_assertEqual("", _getValue($txtTotFrete));

_assertExists($txtTotSeguro);
_assert(_isVisible($txtTotSeguro));
_assertEqual("", _getValue($txtTotSeguro));

_assertExists($txtTotDespAc);
_assert(_isVisible($txtTotDespAc));
_assertEqual("", _getValue($txtTotDespAc));

_assertExists($txtTotNFe);
_assert(_isVisible($txtTotNFe));
_assertEqual("3 279,90", _getValue($txtTotNFe));


//---------------------- ICMS -----------------------------------
_assertExists($txtTotBaseICMS);
_assert(_isVisible($txtTotBaseICMS));
_assertEqual("2 000,00", _getValue($txtTotBaseICMS));

_assertExists($txtTotICMSop);
_assert(_isVisible($txtTotICMSop));
_assertEqual("210,00", _getValue($txtTotICMSop));

_assertExists($txtTotICMSdif);
_assert(_isVisible($txtTotICMSdif));
_assertEqual("", _getValue($txtTotICMSdif));

_assertExists($txtTotICMSdeson);
_assert(_isVisible($txtTotICMSdeson));
_assertEqual("", _getValue($txtTotICMSdeson));

_assertExists($txtTotICMSdevid);
_assert(_isVisible($txtTotICMSdevid));
_assertEqual("140,00", _getValue($txtTotICMSdevid));

// ------------------  ICMS ST------------------------------
_assertExists($txtTotBaseICMSST);
_assert(_isVisible($txtTotBaseICMSST));
_assertEqual("1 470,00", _getValue($txtTotBaseICMSST));

_assertExists($txtTotValorICMSST);
_assert(_isVisible($txtTotValorICMSST));
_assertEqual("179,90", _getValue($txtTotValorICMSST));

// ------------------  IPI --------------------------------------
_assertExists($txtTotBaseIPI);
_assert(_isVisible($txtTotBaseIPI));
_assertEqual("2 000,00", _getValue($txtTotBaseIPI));

_assertExists($txtTotValorIPI);
_assert(_isVisible($txtTotValorIPI));
_assertEqual("100,00", _getValue($txtTotValorIPI));

// ------------------  PIS --------------------------------------
_assertExists($txtTotBasePIS);
_assert(_isVisible($txtTotBasePIS));
_assertEqual("3 000,00", _getValue($txtTotBasePIS));

_assertExists($txtTotValorPIS);
_assert(_isVisible($txtTotValorPIS));
_assertEqual("16,50", _getValue($txtTotValorPIS));

// ------------------  COFINS --------------------------------------
_assertExists($txtTotBaseCOFINS);
_assert(_isVisible($txtTotBaseCOFINS));
_assertEqual("3 000,00", _getValue($txtTotBaseCOFINS));

_assertExists($txtTotValorCOFINS);
_assert(_isVisible($txtTotValorCOFINS));
_assertEqual("90,00", _getValue($txtTotValorCOFINS));

/*
_click(_div("Abandonar a função"));


_click(_div("Eliminar"));
_click(_div("OK"));
_click(_div("Ok"));

_wait(2000);

_click(_link("Navigation"));
*/
//Acesso o link da função Orçamento
/*
_click(_link("Navigation"));

_click(_div("Vendas"));

_click(_div("Orçamentos[1]"))

// Escolhe a transação
_click(_div("ALL Registo completo orçamentos"));

_wait(2000);
*/
//	Adiciona as variaveis - eu havia efetuado o chamado aqui porque existia um for dentro deste script que exigia estar com a função aberta
_include("C:\Users\alisson.souza\sahi\userdata\scripts\Vendas\Encomenda\Encomenda_Variaveis.sah");

_click(_div("Nova"));

_setValue($txtEstabVenda, "BR050");
_keyPress($txtEstabVenda, 9);

_click($txtTipo);
_setValue($txtTipo, "SBRL");
_keyPress($txtTipo, 9);

_click($txtCliente);
_setValue($txtCliente, "BR107");
_keyPress($txtCliente, 9);

_click($txtOpFiscal);
_setValue($txtOpFiscal, "500");
_keyPress($txtOpFiscal, 9);


//-------------------------  LINHAS ----------------------------

_click(_div("Linhas"));

var $prod = 52;

for (var $i=0; $i<18; $i++){ // A QUANTIDADE DE ITENS INSERIDOS SERÁ CONTROLADA PELA VARIAVEL i	
							
							
	//PRODUTO
	clickLinha("Artigo", $i);
	//setLinha("Artigo", $i, "BMS001");
	setLinha("Artigo", $i, "BMS0"+$prod);
	tabLinha("Artigo", $i);

	// QUANTIDADE ENCOMENDADA
	clickLinha ("Qtd. encomend.", $i)
	setLinha("Qtd. encomend.", $i, "10");
	tabLinha ("Qtd. encomend.",$i)

	// PREÇO BRUTO
	clickLinha("Prç. bruto",$i);
	setLinha("Prç. bruto",$i, "100");
	tabLinha("Prç. bruto",$i);
	
	//criando função para achar a CFOP na classe variaveis
	var $cfop = acharCFOP("BMS0"+$prod);

	clickLinha("CFOP",$i);
	setLinha("CFOP",$i, $cfop);
	tabLinha("CFOP",$i);

	// ORIGEM
	clickLinha("Origem",$i);
	setLinha("Origem",$i, "0");
	tabLinha("Origem",$i);

	// CST ICMS
	var $csticms = acharCSTICMS("BMS0"+$prod);
	clickLinha("CST ICMS",$i);
	setLinha("CST ICMS",$i, $csticms);
	tabLinha("CST ICMS",$i);
	
	switch ($csticms){
		case "10":
			_click(_cell("10[1]"));
			break ;
		case "20":
			_click(_cell("20[1]"));
			break ;
		case "30":
			_click(_cell("30[1]"));
			break ;
		case "40":
			_click(_cell("40[1]"));
			break ;
		case "50":
			_click(_cell("50[1]"));
			break ;
		case "90":
			_click(_cell("90[1]"));
			break ;
		default :
			clickLinha("Nível taxa 1",$i);
			break ;
	}
	

	// NIVEL TAXA 1 -- ENTER
	clickLinha("Nível taxa 1",$i);
	//setLinha("Nível taxa 1", $i , "BRL");
	enterLinha("Nível taxa 1",$i);

	/*
	try{
		clickLinha("Artigo", $i);
	}catch ($e){
		_click(_div("No"));
	}
	*/
	
		switch ($i+1){
		case 1:
		$prod = 53;
		break;
		
		case 2:
		$prod = 55;
		break;
		
		case 3:
		$prod = 56;
		break;
		
		case 4:
		$prod = 58;
		break;
		
		case 5:
		$prod = 59;
		break;
		
		case 6:
		$prod = 61;
		break;
		
		case 7:
		$prod = 63;
		break;
		case 8:
		$prod = 64;
		break;
		
		case 9:
		$prod = 66;
		break;
		
		case 10:
		$prod = 67;
		break;		
		
		case 11:
		$prod = 68;
		break;
		
		case 12:
		$prod = 69;
		break;
		
		case 13:
		$prod = 71;
		break;
		
		case 14:
		$prod = 72;
		break;
		
		case 15:
		$prod = 74;
		break;
		
		case 16:
		$prod = 75;
		break;
		
		case 17:
		$prod = 77;
		break;
	
		default :
		$prod = 52;
		break;	
	}
}

_click(_div("Criar"));

_wait(10000, !_isVisible(_div("s-uiLocker-overlay")));
//-------------------------------- ASSERT OF THE SAHI --------------------------------------------

_click(_div("Resumo impostos"));

_assertExists($txtTotMerc);
_assert(_isVisible($txtTotMerc));
_assertEqual("18 000,00", _getValue($txtTotMerc));

_assertExists($txtTotServ);
_assert(_isVisible($txtTotServ));
_assertEqual("", _getValue($txtTotServ));

_assertExists($txtTotDesc);
_assert(_isVisible($txtTotDesc));
_assertEqual("", _getValue($txtTotDesc));

_assertExists($txtTotSuf);
_assert(_isVisible($txtTotSuf));
_assertEqual("", _getValue($txtTotSuf));

_assertExists($txtTotDeson);
_assert(_isVisible($txtTotDeson));
_assertEqual("233,32", _getValue($txtTotDeson));

_assertExists($txtTotIPIeST);
_assert(_isVisible($txtTotIPIeST));
_assertEqual("1 734,91", _getValue($txtTotIPIeST));

_assertExists($txtTotFrete);
_assert(_isVisible($txtTotFrete));
_assertEqual("", _getValue($txtTotFrete));

_assertExists($txtTotDespAc);
_assert(_isVisible($txtTotDespAc));
_assertEqual("", _getValue($txtTotDespAc));

_assertExists($txtTotSeguro);
_assert(_isVisible($txtTotSeguro));
_assertEqual("", _getValue($txtTotSeguro));

_assertExists($txtTotEncomenda);
_assert(_isVisible($txtTotEncomenda));
_assertEqual("19 501,59", _getValue($txtTotEncomenda));

// ---------------------- ICMS ---------------------------------
_assertExists($txtTotBaseICMS);
_assert(_isVisible($txtTotBaseICMS));
_assertEqual("8 233,60", _getValue($txtTotBaseICMS));

_assertExists($txtTotICMSop);
_assert(_isVisible($txtTotICMSop));
_assertEqual("1 253,00", _getValue($txtTotICMSop));

_assertExists($txtTotICMSdif);
_assert(_isVisible($txtTotICMSdif));
_assertEqual("44,33", _getValue($txtTotICMSdif));

_assertExists($txtTotICMSdeson);
_assert(_isVisible($txtTotICMSdeson));
_assertEqual("233,32", _getValue($txtTotICMSdeson));

_assertExists($txtTotICMSdevid);
_assert(_isVisible($txtTotICMSdevid));
_assertEqual("532,03", _getValue($txtTotICMSdevid));

// ------------------  ICMS ST------------------------------
_assertExists($txtTotBaseICMSST);
_assert(_isVisible($txtTotBaseICMSST));
_assertEqual("9 636,86", _getValue($txtTotBaseICMSST));

_assertExists($txtTotValorICMSST);
_assert(_isVisible($txtTotValorICMSST));
_assertEqual("1 334,91", _getValue($txtTotValorICMSST));

// ------------------  IPI --------------------------------------
_assertExists($txtTotBaseIPI);
_assert(_isVisible($txtTotBaseIPI));
_assertEqual("9 000,00", _getValue($txtTotBaseIPI));

_assertExists($txtTotValorIPI);
_assert(_isVisible($txtTotValorIPI));
_assertEqual("400,00", _getValue($txtTotValorIPI));

// ------------------  PIS --------------------------------------
_assertExists($txtTotBasePIS);
_assert(_isVisible($txtTotBasePIS));
_assertEqual("8 000,00", _getValue($txtTotBasePIS));

_assertExists($txtTotBasePISQtde);
_assert(_isVisible($txtTotBasePISQtde));
_assertEqual("160", _getValue($txtTotBasePISQtde));

_assertExists($txtTotValorPIS);
_assert(_isVisible($txtTotValorPIS));
_assertEqual("349,50", _getValue($txtTotValorPIS));

// ------------------  COFINS --------------------------------------
_assertExists($txtTotBaseCOFINS);
_assert(_isVisible($txtTotBaseCOFINS));
_assertEqual("8 000,00", _getValue($txtTotBaseCOFINS));

_assertExists($txtTotBaseCOFINSQtde);
_assert(_isVisible($txtTotBaseCOFINSQtde));
_assertEqual("640", _getValue($txtTotBaseCOFINSQtde));

_assertExists($txtTotValorCOFINS);
_assert(_isVisible($txtTotValorCOFINS));
_assertEqual("2 710,00", _getValue($txtTotValorCOFINS));

/*_click(_div("Abandonar a função"));

_wait(2000);

_click(_link("Navigation"));

*/
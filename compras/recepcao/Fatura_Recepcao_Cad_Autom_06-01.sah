//Acesso o link da função Orçamento

//	--------------------  FATURA SOMENTE COM ITENS, SEM ELMENTO DE FATURAÇÃO OU DESCONTO EM LINHA

/*_click(_link("Navigation"));

_click(_div("Vendas"));

_click(_div("Orçamentos[1]"))

// Escolhe a transação
_click(_div("ALL Registo completo orçamentos"));

_wait(2000);
*/
//	Adiciona as variaveis - eu havia efetuado o chamado aqui porque existia um for dentro deste script que exigia estar com a função aberta
_include("C:/Users/alisson.souza/sahi/userdata/scripts/Compras/Recepcao/Fatura_Recepcao_Variaveis.sah");

_click(_div("Nova"));

_setValue($txtEstabRecepcao, "BR050");
_keyPress($txtEstabRecepcao, 9);

_click($txtFornecedor);
_setValue($txtFornecedor, "BR107");
_keyPress($txtFornecedor, 9);

_click($txtDivisa);
_setValue($txtDivisa, "BRL");
_keyPress($txtDivisa, 9);

//--------------- Separador Dados Gerais -------------------------
_click(_div("Dados gerais"));

_click($txtEndFor);
_setValue($txtEndFor, "001");
_keyPress($txtEndFor, 9);

_click($txtOpFiscal);
_setValue($txtOpFiscal, "502");
_keyPress($txtOpFiscal, 9);

_check($cboxCalculoAutomatico);


//-------------------------  LINHAS ----------------------------
_click(_div("Linhas"));

var $prod = 50;

for (var $i=0; $i<28; $i++){ // A QUANTIDADE DE ITENS INSERIDOS SERÁ CONTROLADA PELA VARIAVEL i							

	
	//PRODUTO
	clickLinha("Artigo", $i);
	//setLinha("Artigo", $i, "BMS001");
	setLinha("Artigo", $i, "BMS0"+$prod);
	tabLinha("Artigo", $i);

	// QUANTIDADE ORÇ.
	clickLinha ("Quantid.", $i);
	setLinha("Quantid.", $i, "10");
	tabLinha ("Quantid.",$i);

	// PREÇO BRUTO
	clickLinha("Prç. bruto",$i);
	setLinha("Prç. bruto",$i, "100");
	enterLinha("Prç. bruto",$i);
	
	$prod++;
}	
//-------------------------  LINHAS IMPOSTOS ----------------------------	
_click(_div("Linhas impostos"));

var $prod = 50;

for (var $i=0; $i<28; $i++){
	
	//criando função para achar a CFOP na classe variaveis
	
	// CFOP
	var $cfop = acharCFOP("BMS0"+$prod);
	clickLinhaImpostos("CFOP",$i);
	setLinhaImpostos("CFOP",$i, $cfop);
	tabLinhaImpostos("CFOP",$i);

	
// ---------------------------------------------   ICMS -----------------------------------------------------------------		
	// ORIGEM
	clickLinhaImpostos("Origem",$i);
	setLinhaImpostos("Origem",$i, "0");
	tabLinhaImpostos("Origem",$i);
	
	// CST ICMS
	var $csticms = acharCSTICMS("BMS0"+$prod);
	clickLinhaImpostos("CST ICMS",$i);
	setLinhaImpostos("CST ICMS",$i, $csticms);
	tabLinhaImpostos("CST ICMS",$i);
	
	switch ($csticms){
	case "10":
		try{
			_click(_div("10"));
			} catch ($e){
				_click(_cell("10[3]"));				
			}
		break ;
	case "20":
		try{
			_click(_div("20"));			
			} catch ($e){
				_click(_cell("20[3]"));
			}
		break ;
	case "30":
		try{
			_click(_div("30"));			
			} catch ($e){
				_click(_cell("30[1]"));
			}
		break ;
	case "40":
		try{
			_click(_div("40"));
			} catch ($e){
				_click(_cell("40[1]"));
			}
		break ;
	case "50":
		try{
			_click(_div("50"));
			} catch ($e){
				_click(_cell("50[1]"));
			}
		break ;
	case "90":
		try{
			_click(_div("90"));
			} catch ($e){
				_click(_cell("90[1]"));
			}
		break ;
	default :
		clickLinhaImpostos("CST IPI",$i);
		break ;
	}

//----------------------------------------- IPI ----------------------------------------
	
	//CST IPI
	var $CstIPI = acharCstIPI("BMS0"+$prod);
	clickLinhaImpostos("CST IPI",$i);
	setLinhaImpostos("CST IPI",$i, $CstIPI);
	tabLinhaImpostos("CST IPI",$i);
	
//---------------------------------------  PIS ----------------------------------------------
	
	//CST PIS
	var $CstPis = acharCstPis("BMS0"+$prod);
	clickLinhaImpostos("CST PIS",$i);
	setLinhaImpostos("CST PIS",$i, $CstPis);
	tabLinhaImpostos("CST PIS",$i);

//---------------------------------------  COFINS ----------------------------------------------
	
	//CST COFINS
	var $CstCofins = acharCstCofins("BMS0"+$prod);
	clickLinhaImpostos("CST COFINS",$i);
	setLinhaImpostos("CST COFINS",$i, $CstCofins);
	enterLinhaImpostos("CST COFINS",$i);
	
	$prod++;
}

_click(_div("Criar"));

_wait(10000, !_isVisible(_div("s-uiLocker-overlay")));

// -------------- Validações com Assert
_click(_div("Resumo NF-e"));

_assertExists($txtTotMerc);
_assert(_isVisible($txtTotMerc));
_assertEqual("28 000,00", _getValue($txtTotMerc));

_assertExists($txtTotServ);
_assert(_isVisible($txtTotServ));
_assertEqual("", _getValue($txtTotServ));

_assertExists($txtTotDesc);
_assert(_isVisible($txtTotDesc));
_assertEqual("", _getValue($txtTotDesc));

_assertExists($txtTotSuf);
_assert(_isVisible($txtTotSuf));
_assertEqual("", _getValue($txtTotSuf));

//_assertExists($txtTotDeson);
//_assert(_isVisible($txtTotDeson));
//_assertEqual("163,33", _getValue($txtTotDeson));

//_assertExists($txtTotIPIeST);
//_assert(_isVisible($txtTotIPIeST));
//_assertEqual("769,74", _getValue($txtTotIPIeST));

_assertExists($txtTotFrete);
_assert(_isVisible($txtTotFrete));
_assertEqual("", _getValue($txtTotFrete));

_assertExists($txtTotDespAc);
_assert(_isVisible($txtTotDespAc));
_assertEqual("", _getValue($txtTotDespAc));

_assertExists($txtTotSeguro);
_assert(_isVisible($txtTotSeguro));
_assertEqual("", _getValue($txtTotSeguro));

_assertExists($txtTotRecepcao);
_assert(_isVisible($txtTotRecepcao));
_assertEqual("29 610,22", _getValue($txtTotRecepcao));

// ---------------------- ICMS ---------------------------------
_assertExists($txtTotBaseICMS);
_assert(_isVisible($txtTotBaseICMS));
_assertEqual("14 567,00", _getValue($txtTotBaseICMS));

_assertExists($txtTotICMSop);
_assert(_isVisible($txtTotICMSop));
_assertEqual("3 348,00", _getValue($txtTotICMSop));

_assertExists($txtTotICMSdif);
_assert(_isVisible($txtTotICMSdif));
_assertEqual("196,00", _getValue($txtTotICMSdif));

_assertExists($txtTotICMSdeson);
_assert(_isVisible($txtTotICMSdeson));
_assertEqual("680,00", _getValue($txtTotICMSdeson));

_assertExists($txtTotICMSdevid);
_assert(_isVisible($txtTotICMSdevid));
_assertEqual("1 552,00", _getValue($txtTotICMSdevid));

// ------------------  ICMS ST------------------------------
_assertExists($txtTotBaseICMSST);
_assert(_isVisible($txtTotBaseICMSST));
_assertEqual("13 556,91", _getValue($txtTotBaseICMSST));

_assertExists($txtTotValorICMSST);
_assert(_isVisible($txtTotValorICMSST));
_assertEqual("1 600,22", _getValue($txtTotValorICMSST));

// ------------------  IPI --------------------------------------
_assertExists($txtTotBaseIPI);
_assert(_isVisible($txtTotBaseIPI));
_assertEqual("14 000,00", _getValue($txtTotBaseIPI));

_assertExists($txtTotValorIPI);
_assert(_isVisible($txtTotValorIPI));
_assertEqual("690,00", _getValue($txtTotValorIPI));

// ------------------  PIS --------------------------------------
_assertExists($txtTotBasePIS);
_assert(_isVisible($txtTotBasePIS));
_assertEqual("15 000,00", _getValue($txtTotBasePIS));

_assertExists($txtTotBasePISQtde);
_assert(_isVisible($txtTotBasePISQtde));
_assertEqual("200", _getValue($txtTotBasePISQtde));

_assertExists($txtTotValorPIS);
_assert(_isVisible($txtTotValorPIS));
_assertEqual("465,50", _getValue($txtTotValorPIS));

// ------------------  COFINS --------------------------------------
_assertExists($txtTotBaseCOFINS);
_assert(_isVisible($txtTotBaseCOFINS));
_assertEqual("15 000,00", _getValue($txtTotBaseCOFINS));

_assertExists($txtTotBaseCOFINSQtde);
_assert(_isVisible($txtTotBaseCOFINSQtde));
_assertEqual("800", _getValue($txtTotBaseCOFINSQtde));

_assertExists($txtTotValorCOFINS);
_assert(_isVisible($txtTotValorCOFINS));
_assertEqual("3 530,00", _getValue($txtTotValorCOFINS));

/*
_click(_div("Abandonar a função"));


_click(_div("Eliminar"));
_click(_div("OK"));
_click(_div("Ok"));

_wait(2000);

_click(_link("Navigation"));
*/
/*
Cenário: BMS050 - BMS051 - BMS057
ICMS: 00 - 10 - 40 

*/
//Acesso o link da função Orçamento
/*
_click(_link("Navigation"));

_click(_div("Vendas"));

_click(_div("Orçamentos[1]"))

// Escolhe a transação
_click(_div("ALL Registo completo orçamentos"));

_wait(2000);
*/
//	Adiciona as variaveis - eu havia efetuado o chamado aqui porque existia um for dentro deste script que exigia estar com a função aberta
_include("C:/Users/alisson.souza/sahi/userdata/scripts/Orcamento_Variaveis.sah");

_click(_div("Nova"));

_setValue($txtEstabVenda, "BR050");
_keyPress($txtEstabVenda, 9);

_click($txtCliente);
_setValue($txtCliente, "BR107");
_keyPress($txtCliente, 9);

_click($txtOpFiscal);
_setValue($txtOpFiscal, "500");
_keyPress($txtOpFiscal, 9);

//-------------------
_click($txtEstabExped);
_setValue($txtEstabExped, "BR050");
_keyPress($txtEstabExped, 9);


//-------------------------  LINHAS ----------------------------

_click(_div("Linhas"));

var $prod = 50;

for (var $i=0; $i<=2; $i++){ // Com este laço, iremos inserir 10 itens na linha, mas este sempre serão os mesmo.
							// Outra possibilidade seria criar um função contendo as informções abaixo e passar alguns dados em sequencia como parametros
							
	//PRODUTO
	clickLinha("Artigo", $i);
	//setLinha("Artigo", $i, "BMS001");
	setLinha("Artigo", $i, "BMS0"+$prod);
	tabLinha("Artigo", $i);

	// QUANTIDADE ORÇ.
	clickLinha ("Qtd. orçam.", $i)
	setLinha("Qtd. orçam.", $i, "10");
	tabLinha ("Qtd. orçam.",$i)

	// PREÇO BRUTO
	clickLinha("Prç. bruto",$i);
	setLinha("Prç. bruto",$i, "80,53");
	tabLinha("Prç. bruto",$i);

	// DESCONTO 1 - Valor
	clickLinha("Desc.1\$",$i);
	setLinha("Desc.1\$",$i, "0,50");
	tabLinha("Desc.1\$",$i);

	//criando função para achar a CFOP na classe variaveis
	
	// CFOP
	var $cfop = acharCFOP("BMS0"+$prod);

	clickLinha("CFOP",$i);
	setLinha("CFOP",$i, $cfop);
	tabLinha("CFOP",$i);

	// ORIGEM
	clickLinha("Origem",$i);
	setLinha("Origem",$i, "0");
	tabLinha("Origem",$i);

	// CST ICMS
	var $csticms = acharCSTICMS("BMS0"+$prod);
	clickLinha("CST ICMS",$i);
	setLinha("CST ICMS",$i, $csticms);
	tabLinha("CST ICMS",$i);
	
	switch ($csticms){
		case "10":
			_click(_cell("10[1]"));
			break ;
		case "20":
			_click(_cell("20[1]"));
			break ;
		case "30":
			_click(_cell("30[1]"));
			break ;
		case "40":
			_click(_cell("40[1]"));
			break ;
		case "50":
			_click(_cell("50[1]"));
			break ;
		case "90":
			_click(_cell("90[1]"));
			break ;
		default :
			clickLinha("Nível taxa 1",$i);
			break ;
	}
	

	// NIVEL TAXA 1 -- ENTER
	clickLinha("Nível taxa 1",$i);
	//setLinha("Nível taxa 1", $i , "BRL");
	enterLinha("Nível taxa 1",$i);

	/*
	try{
		clickLinha("Artigo", $i);
	}catch ($e){
		_click(_div("No"));
	}
	*/
	
	switch ($i+1){
		case 1:
		$prod = 51;
		break;
		case 2:
		$prod = 57;
		break;
		default :
		$prod = 50;
		break;	
	}
	

}


_click(_div("Criar"));

_wait(10000, !_isVisible(_div("s-uiLocker-overlay")));
//-------------------------------- ASSERT OF THE SAHI --------------------------------------------
// ---------------------- ICMS ---------------------------------

_click(_div("Resumo impostos"));

_assertExists($txtTotBaseICMS);
_assert(_isVisible($txtTotBaseICMS));
_assertEqual("1 600,60", _getValue($txtTotBaseICMS));

_assertExists($txtTotICMSop);
_assert(_isVisible($txtTotICMSop));
_assertEqual("112,04", _getValue($txtTotICMSop));

_assertExists($txtTotICMSdif);
_assert(_isVisible($txtTotICMSdif));
_assertEqual("", _getValue($txtTotICMSdif));

_assertExists($txtTotICMSdeson);
_assert(_isVisible($txtTotICMSdeson));
_assertEqual("", _getValue($txtTotICMSdeson));

_assertExists($txtTotICMSdevid);
_assert(_isVisible($txtTotICMSdevid));
_assertEqual("112,04", _getValue($txtTotICMSdevid));

// ------------------  ICMS ST------------------------------
_assertExists($txtTotBaseICMSST);
_assert(_isVisible($txtTotBaseICMSST));
_assertEqual("1 120,42", _getValue($txtTotBaseICMSST));

_assertExists($txtTotValorICMSST);
_assert(_isVisible($txtTotValorICMSST));
_assertEqual("134,45", _getValue($txtTotValorICMSST));

// ------------------  IPI --------------------------------------
_assertExists($txtTotBaseIPI);
_assert(_isVisible($txtTotBaseIPI));
_assertEqual("805,30", _getValue($txtTotBaseIPI));

_assertExists($txtTotValorIPI);
_assert(_isVisible($txtTotValorIPI));
_assertEqual("40,27", _getValue($txtTotValorIPI));

// ------------------  PIS --------------------------------------
_assertExists($txtTotBasePIS);
_assert(_isVisible($txtTotBasePIS));
_assertEqual("1 600,60", _getValue($txtTotBasePIS));

_assertExists($txtTotValorPIS);
_assert(_isVisible($txtTotValorPIS));
_assertEqual("24,01", _getValue($txtTotValorPIS));

// ------------------  COFINS --------------------------------------
_assertExists($txtTotBaseCOFINS);
_assert(_isVisible($txtTotBaseCOFINS));
_assertEqual("1 600,60", _getValue($txtTotBaseCOFINS));

_assertExists($txtTotValorCOFINS);
_assert(_isVisible($txtTotValorCOFINS));
_assertEqual("48,02", _getValue($txtTotValorCOFINS));

/*_click(_div("Abandonar a função"));

_wait(2000);

_click(_link("Navigation"));

*/